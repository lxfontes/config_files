[user]
  name = lxfontes
  email = lxfontes@gmail.com
  signingkey = C594A0BA

[gitflow "prefix"]
  feature = feature/
  release = qa/
  hotfix = hotfix/
  support = support/
  versiontag = v

[color]
  ui = auto

[alias]
  hist = log --pretty=format:\"%h %ad%x09| %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p
  ds = diff --staged      # git ds - diff your staged changes == review before committing.
  st = status -sb         # smarter status - include tag and branch info
  ls = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short  # pretty one-line log with tags, branches and authors
  lsv = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short --numstat    # a verbose ls, shows changed files too
  cp = cherry-pick
  ps = push
  pl = pull
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  l = log --graph --date=short
  recent-branches = !git for-each-ref --count=5 --sort=-committerdate refs/heads/ --format='%(refname:short)'
  simple = log --pretty=format:\" * %s\"
  br = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
  pushf = push --force-with-lease

[format]
    pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[diff]
  tool = code

[difftool "code"]
  cmd = code --wait --diff $LOCAL $REMOTE

[merge]
  tool = p4merge
  summary = true
  log = true
  prompt = false

[mergetool "p4merge"]
  cmd = /Applications/p4merge.app/Contents/Resources/launchp4merge "\"$PWD/$BASE\"" "\"$PWD/$REMOTE\"" "\"$PWD/$LOCAL\"" "\"$PWD/$MERGED\""
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false

[apply]
    whitespace = nowarn
[branch]
    autosetupmerge = true
[push]
    default = tracking
[rerere]
    enabled = true
[core]
	excludesfile = /Users/lucas/.gitignore
[commit]
#	gpgsign = true
[gpg]
	program = gpg2
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
